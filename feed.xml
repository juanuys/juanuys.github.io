<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Juan Uys</title>
  <link href="http://opyate.com/atom.xml" rel="self"/>
  <link href="http://opyate.com/"/>
  <updated>2014-05-09T04:18:19-07:00</updated>
  <id>http://opyate.com/</id>
  <author>
    <name>Juan Uys</name>
    <email>opyate@gmail.com</email>
  </author>
  
  <entry>
    <title>More jq fun</title>
    <link href="http://opyate.com/2014/01/29/more-jq-fun.html"/>
    <updated>2014-01-29T00:00:00-08:00</updated>
    <id>http://opyate.com/2014/01/29/more-jq-fun</id>
    <content type="html">&lt;p&gt;I&amp;rsquo;ve &lt;a href=&quot;2013/11/05/my-new-favourite-way-to-pretty-print-json-in-vim.html&quot;&gt;written about&lt;/a&gt; &lt;a href=&quot;http://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt; before, but I mention it again here as a very useful tool for parsing JSON on the command line.&lt;/p&gt;

&lt;p&gt;I needed to grab some England Bank holidays for a &lt;a href=&quot;https://github.com/opyate/taximeter&quot;&gt;quick hack&lt;/a&gt; the other day, and found that the GOV.UK team made web better by allowing you to append &lt;em&gt;.json&lt;/em&gt; to any of their links to get to the data.&lt;/p&gt;

&lt;p&gt;Hold onto yer hats:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/8773005.js&quot;&gt; &lt;/script&gt;

</content>
	<content type="image/png" src="" />
    <author>
      <name>Juan Uys</name>
      <uri>http://opyate.com/about/</uri>
    </author>
  </entry>
  
  <entry>
    <title>2103 &mdash; the year's code and tooling in review</title>
    <link href="http://opyate.com/2013/12/31/code-and-tools-the-year-in-review.html"/>
    <updated>2013-12-31T00:00:00-08:00</updated>
    <id>http://opyate.com/2013/12/31/code-and-tools-the-year-in-review</id>
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://25.media.tumblr.com/650a566e7ccb9b0f292ce9c016206c14/tumblr_mygpxoJUpY1ri2z5io1_1280.jpg&quot; width=&quot;50%&quot; align=&quot;right&quot;&gt; I saw the #code2013 hashtag on Twitter last night and &lt;a href=&quot;https://twitter.com/opyate/status/417785250308444160&quot;&gt;joined in&lt;/a&gt;. It got me thinking about the stuff around the programming languages I use, and my professional skillset in general.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll briefly touch on how a few major events in my life forced me to cut the fat and become more focused.&lt;/p&gt;

&lt;p&gt;A few notes, then.&lt;/p&gt;

&lt;h1&gt;The programming languages&lt;/h1&gt;

&lt;h2&gt;Scala&lt;/h2&gt;

&lt;p&gt;My new, old favourite. My go-to language since 2009. I can&amp;rsquo;t add much for 2013 apart from that I&amp;rsquo;m happy to see the community mature around it. We&amp;rsquo;ve gone from &amp;ldquo;How we adopted Scala at company X&amp;rdquo; to &amp;ldquo;How to go back in time using Akka, Play! and XYZ&amp;rdquo;. Oh, and then the &lt;a href=&quot;https://www.coursera.org/course/reactive&quot;&gt;reactive course&lt;/a&gt; was fun too, and highlighted a few holes in my Akka education.&lt;/p&gt;

&lt;h2&gt;Java&lt;/h2&gt;

&lt;p&gt;Java still mostly pays the bills, and I&amp;rsquo;m writing even better Java thanks to Scala. My editor is told to highlight everything in a shade of gray, apart from re-assignables which are red. It all just flows.&lt;/p&gt;

&lt;h2&gt;Python&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;m a big fan of &lt;a href=&quot;http://www.pylonsproject.org/&quot;&gt;Pylons&lt;/a&gt; and have used Python since 2006-ish for tiny webapps, but this year sees me going down the finance route with &lt;a href=&quot;http://www.scipy.org/&quot;&gt;SciPy&lt;/a&gt; and &lt;a href=&quot;http://pandas.pydata.org/&quot;&gt;Pandas&lt;/a&gt; thanks to a &lt;a href=&quot;https://www.coursera.org/course/dataanalysis&quot;&gt;handful&lt;/a&gt; &lt;a href=&quot;https://www.coursera.org/course/bigdata&quot;&gt;of&lt;/a&gt; &lt;a href=&quot;https://www.coursera.org/course/compinvesting1&quot;&gt;courses&lt;/a&gt; I did recently.&lt;/p&gt;

&lt;h2&gt;R&lt;/h2&gt;

&lt;p&gt;Strangely addictive. I did a &lt;a href=&quot;https://www.coursera.org/course/dataanalysis&quot;&gt;data analysis course&lt;/a&gt; with the famed Johns Hopkins university earlier this year, and thought I would be &amp;ldquo;learning&amp;rdquo; R along the way. If anything, it felt like I already knew R, and the thing that I learned was making a good analysis, writing it perfectly and succintly, and performing an honest peer review. R is perfect for slicing and dicing your data, and it doesn&amp;rsquo;t get in the way.&lt;/p&gt;

&lt;h2&gt;Dart&lt;/h2&gt;

&lt;p&gt;The main attraction to Dart for me was the promise of compiling to a better Javascript which you can ever hope to write by hand. The Dart syntax itself is familiar, and then you have the odd goodies like the &lt;a href=&quot;http://news.dartlang.org/2012/02/method-cascades-in-dart-posted-by-gilad.html&quot;&gt;cascade operator&lt;/a&gt; (borrowed from Smalltalk) which lets you chain methods without having to return the instance in your API, and being a Scala guy, I love having rockets (=&gt;) scattered all over my code (Dart&amp;rsquo;s syntactic sugar for concise getters).&lt;/p&gt;

&lt;h2&gt;Javascript&lt;/h2&gt;

&lt;p&gt;Being a backend programmer by trade, I usually don&amp;rsquo;t go for frontend gigs, but a client this year said they don&amp;rsquo;t mind me learning on the job, and I&amp;rsquo;ve heard good things about AngularJS, so I dove right in. I&amp;rsquo;ve touched on Javascript a lot in the past, but this year I spent a significant tenth of my professional time fiddling with it.&lt;/p&gt;

&lt;h2&gt;Haskell&lt;/h2&gt;

&lt;p&gt;Yes, I really did spend the tiniest amount of time with Haskell, but enough to mention it here. I downloaded, chopped and changed the XMonad code and the take-away for me was that 2014 will see more Haskell.&lt;/p&gt;

&lt;h2&gt;Other languages, not-so-much-languages, and tools&lt;/h2&gt;

&lt;p&gt;My starter Dart project is a game (where do I find the time?), hence WebGL and subsequently &lt;a href=&quot;http://en.wikipedia.org/wiki/OpenGL_Shading_Language&quot;&gt;GLSL&lt;/a&gt;. I&amp;rsquo;m particularly excited about getting my hands even dirtier with shaders with Mozilla &lt;a href=&quot;https://hacks.mozilla.org/2013/11/live-editing-webgl-shaders-with-firefox-developer-tools/&quot;&gt;recently announcing&lt;/a&gt; live-editing of shaders using Firefox.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve always used Capistrano and Chef for my provisioning and configuration needs, but this year I gave Ansible a shot. I hope Ansible stays the way it is: small, simple, elegant. No agents; just SSH.&lt;/p&gt;

&lt;h1&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;2013 was a bumpy ride. We had a beautiful daughter in June, and I quit my job soon after to freelance from home and be 2 flights of stairs away from her. To be able to learn a few new skills and do 4 courses, I had to make some changes. There are the 5AM starts, the &lt;a href=&quot;http://well.blogs.nytimes.com/2013/05/09/the-scientific-7-minute-workout&quot;&gt;highly-condensed exercise routine in the morning&lt;/a&gt;, diligently deleting anything which doesn&amp;rsquo;t contribute to the plan I have for our life (this includes articles, emails, etc), and just generally getting things done.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://24.media.tumblr.com/abbc16af261cffe6a867bfbcb4f380e2/tumblr_myfbtyAEiW1ri2z5io1_1280.jpg&quot; width=&quot;50%&quot; align=&quot;left&quot; alt=&quot;The Polar Bear who might have eaten Xmas&quot;&gt; The game I mentioned seems like a distraction, but I feel it&amp;rsquo;s important that I do it. I&amp;rsquo;ve been in love with doodling since I was a kid, and really took it up this year. I&amp;rsquo;m an able musician, and since I can code I thought I&amp;rsquo;d bring these ingredients together and make something nice. (Those umpteen characters and storylines in my head will finally be unleashed!).&lt;/p&gt;

&lt;p&gt;Thanks for reading this far. May you have a great 2014.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I leave you with a doodle I made a few days ago entitled &amp;ldquo;The Polar Bear who might have eaten Xmas&amp;rdquo;. (Don&amp;rsquo;t worry &amp;mdash; this isn&amp;rsquo;t one of my games ideas ;-)&lt;/em&gt;&lt;/p&gt;
</content>
	<content type="image/jpeg" src="http://25.media.tumblr.com/650a566e7ccb9b0f292ce9c016206c14/tumblr_mygpxoJUpY1ri2z5io1_1280.jpg" />
    <author>
      <name>Juan Uys</name>
      <uri>http://opyate.com/about/</uri>
    </author>
  </entry>
  
  <entry>
    <title>Using single and double pipes in Scala conditionals</title>
    <link href="http://opyate.com/2013/12/27/using-single-and-double-pipes-in-scala-conditionals.html"/>
    <updated>2013-12-27T00:00:00-08:00</updated>
    <id>http://opyate.com/2013/12/27/using-single-and-double-pipes-in-scala-conditionals</id>
    <content type="html">&lt;p&gt;In a nutshell, use a single pipe if you want all the expressions in your conditionals to be evaluated, and a double pipe to conk out as soon as you have &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;
scala&gt; def a = { println(&quot;a&quot;) ; true }
a: Boolean

scala&gt; def b = { println(&quot;b&quot;) ; true }
b: Boolean

scala&gt; def c = { println(&quot;c&quot;) ; true }
c: Boolean

scala&gt; if (a || b || c) println(&quot;true&quot;) else println(&quot;false&quot;)
a
true

scala&gt; if (a | b | c) println(&quot;true&quot;) else println(&quot;false&quot;)
a
b
c
true
&lt;/pre&gt;

</content>
	<content type="" src="" />
    <author>
      <name>Juan Uys</name>
      <uri>http://opyate.com/about/</uri>
    </author>
  </entry>
  
  <entry>
    <title>Heuristics</title>
    <link href="http://opyate.com/2013/12/13/heuristics.html"/>
    <updated>2013-12-13T00:00:00-08:00</updated>
    <id>http://opyate.com/2013/12/13/heuristics</id>
    <content type="html">&lt;p&gt;I recently saw a talk by Jack Dorsey where he iterates a list of commandments for this life, and number three is &amp;ldquo;drink only lemon water and red wine&amp;rdquo;.&lt;/p&gt;

&lt;iframe width=&quot;640&quot; height=&quot;360&quot; src=&quot;//www.youtube.com/embed/wEQawgkCMOU?feature=player_detailpage&amp;start=1220&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;


&lt;p&gt;I love red wine, and was intrigued by this lemon water idea. I investigated and it led me to &lt;a href=&quot;http://www.lifehack.org/articles/lifestyle/11-benefits-lemon-water-you-didnt-know-about.html&quot;&gt;an article&lt;/a&gt; which asks how much lemon water is needed. They quote a heuristic:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For those who weigh less than 150 pounds, squeeze half a lemon’s worth of juice into a glass of water. If over 150 pounds, use an entire lemon’s juice.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is a heuristic, and it is beautiful. It saved the author from quoting an entire &amp;ldquo;weight in pounds to amount of lemon&amp;rdquo; table.&lt;/p&gt;

&lt;p&gt;The heuristic is one of my favourite concepts of all time. During engineering school in the late nineties it became ever more apparent what a powerful concept it is, e.g. using lookup tables when designing flow systems with complex flow dynamics. It makes applied rocket science a bit easier. Or when solving path finding problems where the brute force method is just not a viable option in terms of time complexity.&lt;/p&gt;

&lt;p&gt;Anyhoo, I&amp;rsquo;ve reached my 10 minute limit for writing ★, and since I can&amp;rsquo;t do this powerful concept any justice with just a few words, I&amp;rsquo;ll let the &lt;a href=&quot;http://en.wikipedia.org/wiki/Heuristic&quot;&gt;editors of Wikipedia englighten you&lt;/a&gt; further.&lt;/p&gt;

&lt;p&gt;★ this is my own heuristic (aka &amp;ldquo;rule of thumb&amp;rdquo;) for not spending too much time on writing.&lt;/p&gt;
</content>
	<content type="" src="" />
    <author>
      <name>Juan Uys</name>
      <uri>http://opyate.com/about/</uri>
    </author>
  </entry>
  
  <entry>
    <title>Project Euler 18 and 67 in Scala using foldRight, zip and sliding</title>
    <link href="http://opyate.com/2013/11/28/project-euler-18-and-67-in-scala-using-foldright-zip-and-sliding.html"/>
    <updated>2013-11-28T00:00:00-08:00</updated>
    <id>http://opyate.com/2013/11/28/project-euler-18-and-67-in-scala-using-foldright-zip-and-sliding</id>
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://distilleryimage6.ak.instagram.com/267f6626581311e3986c12b308e0cf9c_8.jpg&quot; width=&quot;50%&quot; align=&quot;right&quot;&gt; I&amp;rsquo;ve recently applied to &lt;a href=&quot;http://www.toptal.com/?ref=14568&quot;&gt;Toptal&lt;/a&gt; and sucked miserably at the entry exam. My algo chops were blunt and I thought I&amp;rsquo;d rectify it by revisiting &lt;a href=&quot;http://projecteuler.net/&quot;&gt;Project Euler&lt;/a&gt;. With the startup last year and the baby this year I just haven&amp;rsquo;t been able to find the time for programming challenges, but that has to change.&lt;/p&gt;

&lt;p&gt;Looking at my Project Euler source directory, I saw that I left it at &lt;a href=&quot;http://projecteuler.net/problem=17&quot;&gt;problem 17&lt;/a&gt;, so next up will be &lt;a href=&quot;http://projecteuler.net/problem=18&quot;&gt;18&lt;/a&gt;. The problem description, however, mentions that the &lt;a href=&quot;http://projecteuler.net/problem=67&quot;&gt;problem repeats itselt as 67&lt;/a&gt;, but with a bigger input that will run 20 billion years if you go the brute force route.&lt;/p&gt;

&lt;p&gt;I worked a little on this problem last night, and decided to by-pass the brute force solution completely. It was a bit late, though, and I pulled my eyelids open far enough to make it to bed. I then went on to dream about the damn problem all night. I knew there had to be a simple bottom-up fold-based solution, and the &lt;em&gt;voila&lt;/em&gt; moment came for me when I realised I had to seed the fold computation with the base layer in the triangle.&lt;/p&gt;

&lt;p&gt;Here you go:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/7689573.js&quot;&gt; &lt;/script&gt;


&lt;h1&gt;A little explanation&lt;/h1&gt;

&lt;p&gt;The triangle is represented as a nested list, like so: &lt;strong&gt;List(List(1), List(2, 3), List(4, 5, 6))&lt;/strong&gt; and so forth.&lt;/p&gt;

&lt;pre&gt;

     1
    / \
   2   3
  / \ / \
 4   5   6    &lt;- this is the &quot;base layer&quot; in my explanation.
&lt;/pre&gt;


&lt;p&gt;Since you need to add the maximum of the two immediate children to the layer above, a foldRight wouldn&amp;rsquo;t give me all the info I need in the curent iteration. Foldright for me means &amp;ldquo;the data is coming FROM the right&amp;rdquo;, i.e. &lt;strong&gt;List(4, 5, 6)&lt;/strong&gt; will be processed first, then &lt;strong&gt;List(2, 3)&lt;/strong&gt; but at no point in the iteration will they be available together so I can do the sum. &lt;strong&gt;List(4, 5, 6)&lt;/strong&gt; would need to come into the iteration with &lt;strong&gt;List(2, 3)&lt;/strong&gt; in another way, and I realised I can use the foldRight&amp;rsquo;s accumulator for that by seeding the foldRight with the base layer in the triangle (aka the last list &lt;strong&gt;List(4, 5, 6)&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;The easiest way was to just seed the foldRight with a list of zeros one element larger than the base layer. You then break it up into pairs using &lt;strong&gt;sliding(2,1)&lt;/strong&gt;, take the max of the pairs, and sum the max with the corresponding (thanks to &lt;strong&gt;zip&lt;/strong&gt;) element in the layer above.&lt;/p&gt;

&lt;pre&gt;

      1
     / \
    2   3
   / \ / \
  4   5   6
 / \ / \ / \
0   0   0   0    &lt;- this becomes the new &quot;base layer&quot;, or &quot;seed&quot;
&lt;/pre&gt;


&lt;p&gt;No mutable state; no recursion; simple to understand. As &lt;a href=&quot;http://www.applied-duality.com&quot;&gt;Erik Meijer&lt;/a&gt; would say: &amp;ldquo;baby code&amp;rdquo;.&lt;/p&gt;
</content>
	<content type="image/jpeg" src="http://distilleryimage6.ak.instagram.com/267f6626581311e3986c12b308e0cf9c_8.jpg" />
    <author>
      <name>Juan Uys</name>
      <uri>http://opyate.com/about/</uri>
    </author>
  </entry>
  
  <entry>
    <title>A webwords Chef cookbook</title>
    <link href="http://opyate.com/2013/11/10/the-quickest-way-to-get-started-with-dev-vms.html"/>
    <updated>2013-11-10T00:00:00-08:00</updated>
    <id>http://opyate.com/2013/11/10/the-quickest-way-to-get-started-with-dev-vms</id>
    <content type="html">&lt;p&gt;There are a lot of &lt;a href=&quot;http://typesafe.com/activator/templates&quot;&gt;new examples&lt;/a&gt; up on the Typesafe website, a few with the word &amp;ldquo;Reactive&amp;rdquo; in them to drive home the &lt;a href=&quot;http://www.reactivemanifesto.org/&quot;&gt;credo&lt;/a&gt; behind the framework. One of my favourite examples, however, seem to have been demoted but still remains one of my favourites: &lt;a href=&quot;https://github.com/typesafehub/webwords&quot;&gt;webwords&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://webwords.herokuapp.com/&quot;&gt;The old Heroku link&lt;/a&gt; to the live running instance of webwords does not seem to be up anymore, so I whipped up a quick Chef cookbook with which to spin up your own local instance.&lt;/p&gt;

&lt;p&gt;You can find the Github repo &lt;a href=&quot;https://github.com/opyate/webwords-vm.git&quot;&gt;here&lt;/a&gt;. Spin it up and have fun.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;BTW, join us in doing the &lt;a href=&quot;https://www.coursera.org/course/reactive&quot;&gt;Principles of Reactive Programming course&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;!--

The original blog post was going to be a guide to getting webwords cookbook working the old fashioned way, but then I discovered Berkshelf and thought it all a bit pointless.

~/C/s/webwords-vm ❯❯❯ du -chs /home/opyate/.rvm/gems/ruby-2.0.0-p247@vagrant
147M    /home/opyate/.rvm/gems/ruby-2.0.0-p247@vagrant
147M    total

Remove these two lines from the newly-generated Vagrantfile:

  config.ssh.max_tries = 40
  config.ssh.timeout   = 120 

These switches have been deprecated.

# Chef server

git clone https://github.com/opscode-cookbooks/chef-server.git
cd chef-server
vagrant plugin install vagrant-berkshelf
vagrant plugin install vagrant-omnibus
vagrant up

Et voila! Now you have a Chef server.

After logging into the Chef server, it shows the following message, which in turn shows a few things I&#39;ll definitely check out and bog about at another time, e.g. Juju and Landscape.

&lt;code&gt;
~/V/chef-server git:master ❯❯❯ vagrant ssh                                                                                                                                                                         ✱
Welcome to Ubuntu 12.04.3 LTS (GNU/Linux 3.2.0-55-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

  System information as of Sat Nov  2 20:24:46 UTC 2013

  System load:  1.04              Processes:           137
  Usage of /:   5.0% of 39.37GB   Users logged in:     0
  Memory usage: 65%               IP address for eth0: 10.0.2.15
  Swap usage:   0%                IP address for eth1: 33.33.33.50

  Graph this data and manage this system at https://landscape.canonical.com/

  Get cloud support with Ubuntu Advantage Cloud Guest:
    http://www.ubuntu.com/business/services/cloud

  Use Juju to deploy your cloud instances and workloads:
    https://juju.ubuntu.com/#cloud-precise

0 packages can be updated.
0 updates are security updates.

vagrant@chef-server:~$ 

&lt;/code&gt;

You can see your server at https://33.33.33.50 in your web browser to get started. (the sidebar says to log in with &#39;admin&#39; and &#39;p@ssw0rd1&#39;, in case you missed it).

# Client

Now, turn your workstation into a chef client.

Firstly, we need knife. Since I rarely muddy my *entire* system with Ruby packages, I localise stuff to gemsets:

rvm use 2.0.0-p247@chef-client --create --default
sudo apt-get install ruby-bundler

I then use the following Gemfile, and run &#39;bundle install&#39; on it:

&lt;todo the gemfile&gt;

See ~/VMs/chef-client
&lt;/todo&gt;


I re-iterate the important steps from the [official documentation](http://www.opscode.com/blog/2013/03/11/chef-11-server-up-and-running/):
(please match my steps with the steps on the above blog since I don&#39;t provide as much detail)

* copy chef-validator.pem from the chef server to ~/.chef (create the latter if it doesn&#39;t exist)

On the chef server, do:

&lt;code&gt;
vagrant@chef-server:~$ sudo cp /etc/chef-server/chef-validator.pem /vagrant/
vagrant@chef-server:~$ sudo cp /etc/chef-server/admin.pem /vagrant/
&lt;/code&gt;

Then back in the cloned directory (the directory containing Vagrantfile):

&lt;code&gt;
mv admin.pem chef-validator.pem ~/.chef  
&lt;/code&gt;

Add the following to the /etc/hosts:

33.33.33.50 chef-server

In the same folder where we installed the Chef gem, run:

knife configure -i

Output should look like the following:

&lt;pre&gt;
~/V/chef-client ❯❯❯ knife configure -i
WARNING: No knife configuration file found
Where should I put the config file? [/home/opyate/.chef/knife.rb] 
Please enter the chef server URL: [https://annabelle:443] https://chef-server:443
Please enter a name for the new user: [opyate] 
Please enter the existing admin name: [admin] 
Please enter the location of the existing admin&#39;s private key: [/etc/chef-server/admin.pem] ~/.chef/admin.pem
Please enter the validation clientname: [chef-validator] 
Please enter the location of the validation key: [/etc/chef-server/chef-validator.pem] ~/.chef/chef-validator.pem
Please enter the path to a chef repository (or leave blank): 
Creating initial API user...
Please enter a password for the new user: 
Created user[opyate]
Configuration file written to /home/opyate/.chef/knife.rb
~/V/chef-client ❯❯❯ 

&lt;/pre&gt;

For simplicity, I keep my roles and cookbooks in ~/.chef, so I add the following lines to ~/.chef/knife.rb

&lt;code&gt;

current_dir = File.dirname(__FILE__)
cookbook_path            [&quot;#{current_dir}/cookbooks&quot;]
role_path                [&quot;#{current_dir}/roles&quot;]
&lt;/code&gt;

I create my first cookbook with:

knife  cookbook create gulp -C &quot;Juan Uys&quot; -m &quot;opyate@gmail.com&quot; -I mit -r md

(gulp = Gullible Unnatural Language Processor)

knife cookbook role create gulp

...and then add to run_list: &quot;recipe[gulp]&quot;

We&#39;ll add our own custom Java recipe which will use different defaults, e.g. version 7 instead of 6.

&lt;todo include Java7 recipe here&gt;

Also, instead of downloading Java7&#39;s dependencies (i.e. java and apt), Berkshelf now kicks in and manages the cookbook dependencies for us.

--&gt;

</content>
	<content type="image/jpeg" src="http://www.gravatar.com/avatar/c22bbf2aac2a3841d80f5363d73e3ebe.png?s=512" />
    <author>
      <name>Juan Uys</name>
      <uri>http://opyate.com/about/</uri>
    </author>
  </entry>
  
  <entry>
    <title>Pretty-print JSON in vim</title>
    <link href="http://opyate.com/2013/11/05/my-new-favourite-way-to-pretty-print-json-in-vim.html"/>
    <updated>2013-11-05T00:00:00-08:00</updated>
    <id>http://opyate.com/2013/11/05/my-new-favourite-way-to-pretty-print-json-in-vim</id>
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://distilleryimage10.ak.instagram.com/09fde780461511e3924b22000aaa05e0_8.jpg&quot; width=&quot;50%&quot; align=&quot;right&quot; alt=&quot;jq to the res-q.&quot;&gt; &lt;strong&gt; &lt;em&gt;TL;DR&lt;/em&gt; A quick way to pretty-print JSON in vim with no dependencies (here&amp;rsquo;s looking at you, Perl). Download &lt;a href=&quot;http://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt; then &lt;code&gt;:%!jq &amp;lsquo;.&amp;rsquo;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;Computational statisticians&lt;/del&gt;Data scientists have some the funnest tools, and I found a good write-up of a few more I didn&amp;rsquo;t know about called &lt;a href=&quot;http://jeroenjanssens.com/2013/09/19/seven-command-line-tools-for-data-science.html&quot;&gt;7 command-line tools for data science&lt;/a&gt;. The first thing the article mentions is a gem called &lt;a href=&quot;http://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I found jq to be especially useful for formatting JSON in vim. So, before ado can in any way be furthered:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;curl http://stedolan.github.io/jq/download/linux64/jq -o ~/bin/jq&lt;/code&gt;
&lt;span style=&#39;display:block;&#39;&gt;&amp;nbsp;&lt;/span&gt;
&lt;code&gt;chmod +x ~/bin/jq&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In vim, open your unformatted JSON file, then: &lt;code&gt;:%!jq &amp;lsquo;.&amp;rsquo;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There you go, ladies and gents &amp;mdash; a command so short, you don&amp;rsquo;t even need to put it in your vimrc!&lt;/p&gt;
</content>
	<content type="image/jpeg" src="http://distilleryimage10.ak.instagram.com/09fde780461511e3924b22000aaa05e0_8.jpg" />
    <author>
      <name>Juan Uys</name>
      <uri>http://opyate.com/about/</uri>
    </author>
  </entry>
  
  <entry>
    <title>Dell XPS 13 LE</title>
    <link href="http://opyate.com/2013/11/02/dell-xps-13-linux-edition-makes-me-happy.html"/>
    <updated>2013-11-02T00:00:00-07:00</updated>
    <id>http://opyate.com/2013/11/02/dell-xps-13-linux-edition-makes-me-happy</id>
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://25.media.tumblr.com/ee240ba31d3f2f3d04985380a78a7cb3/tumblr_mvmkbyrTe01ri2z5io1_1280.jpg&quot; width=&quot;50%&quot; align=&quot;right&quot; alt=&quot;The portal to my livelihood.&quot;&gt; &lt;em&gt;TL;DR&lt;/em&gt; If you&amp;rsquo;re a laptop-toting *nix user, then this is the laptop for you. Also, upgrade the kernel before you do anything else, for the best experience.&lt;/p&gt;

&lt;p&gt;This advice is highly unqualified, though. The last time I ran *nix on a laptop was when I ran some flavour of Gentoo on an old Centrino-loaded HP in 2005. I&amp;rsquo;ve been a Mac user ever since those darned iPhones came out.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s just that I ran out of space on my 128GB SSD Air for the umpteenth time, and shuddered at the thought of breaking off glued-down components according to some &lt;a href=&quot;http://www.ifixit.com/Guide/MacBook+Air+13-Inch+Mid+2013+Solid-State+Drive+Replacement/151810&quot;&gt;iFixit guide&lt;/a&gt;. (Damnit! I just looked again, and there&amp;rsquo;s no glue involved in upgrading the SSD. Oh, well &amp;mdash; the missus needed a new laptop anyway, and this was a welcome hand-me-down. Besides: new toys!)&lt;/p&gt;

&lt;h1&gt;First thing&amp;rsquo;s first&lt;/h1&gt;

&lt;p&gt;When you do get one of these bad boys, the first thing I recommend you do is this:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/7276520.js&quot;&gt; &lt;/script&gt;


&lt;p&gt;That will get you the latest kernel without upgrading &lt;em&gt;everything&lt;/em&gt;. As any Linux user would know, upgrading to fix one problem introduces a thousand other problems, and this felt like a nice trade-off.&lt;/p&gt;

&lt;p&gt;The reason for the above command is that I did have some wifi stability issues to start with, so I hope to save you that initial few dropped connections.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Once again, kudos to &lt;a href=&quot;http://popey.com/&quot;&gt;popey&lt;/a&gt; over on the #ubuntu-uk IRC channel for the &lt;a href=&quot;https://wiki.ubuntu.com/Kernel/LTSEnablementStack&quot;&gt;advice&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://wiki.ubuntu.com/Kernel/LTSEnablementStack&quot;&gt;&lt;img src=&quot;http://i.imgur.com/lj9GnWi.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wifi has been stable and pretty quick. I suppose it&amp;rsquo;s not all down to the new kernel and drivers: I have Virgin 60Mb fibre optic, and my walls are refreshingly free of tin foil.&lt;/p&gt;

&lt;h1&gt;The gear&lt;/h1&gt;

&lt;p&gt;The XPS 13 comes packed with some great specs which &lt;a href=&quot;http://www.dell.com/uk/business/p/xps-13-linux/pd&quot;&gt;you can gloss over here&lt;/a&gt;, but I&amp;rsquo;ll re-iterate the key components: Intel® Core™ i7-3537U CPU @ 2.00GHz × 4, 8GB RAM, 256GB SSD of which 230-odd usable and a mega bright 13.3&quot; screen all on a pretty little laptop that feels like an 11&quot; one. I never put the brightness above a third of the available level, and at 1920 x 1080 it looks great.&lt;/p&gt;

&lt;p&gt;The keyboard still sports a Windows button, but it&amp;rsquo;s the new Windows logo which I&amp;rsquo;m not familiar with yet, and I pass it off in my mind as a generic &amp;ldquo;dashboard&amp;rdquo; type button, so it&amp;rsquo;s all good. A &lt;a href=&quot;http://en.wikipedia.org/wiki/Tux&quot;&gt;Tux&lt;/a&gt; button would probably be a bit weird. I mean, what would a penguin button do? Summon a troop of penguins? Nah. Besides, penguins &amp;mdash; just like seals and dolphins &amp;mdash; can be &lt;a href=&quot;http://www.slate.com/blogs/wild_things/2013/10/28/sea_otter_dolphin_and_penguin_behavior_your_favorite_animals_are_jerks.html&quot;&gt;dirty little scumbags&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;The ever-so-scientific bench test&lt;/h1&gt;

&lt;p&gt;I needed GIMP for something last night, and when I installed it and launched it for the first time, the realisation hit me that it all took about 30 seconds.&lt;/p&gt;

&lt;p&gt;So, I purged GIMP and re-did it for your viewing pleasure:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/Gt0H4_QUvzE&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;


&lt;p&gt;Apart from this, I&amp;rsquo;m running about multiple Java server apps (for this thing I&amp;rsquo;m working on), plus a couple of VMs, plus some Python scripts that are running some numbers. My software does make efficient use of all the available cores, and CPU hasn&amp;rsquo;t been a problem for me in a while.&lt;/p&gt;

&lt;p&gt;All the Linux games available on Steam runs like a dream. Just the addition of Steam of a *nix system feels like we&amp;rsquo;ve come full circle.&lt;/p&gt;

&lt;h1&gt;Qualms&lt;/h1&gt;

&lt;p&gt;It&amp;rsquo;s early days &amp;mdash; a lot might still happen. In fact, Murphy&amp;rsquo;s Law states that I&amp;rsquo;ll publish this favourable review and it will be shortly followed by the i7 going up in smoke.&lt;/p&gt;

&lt;p&gt;Anyway, here are some of my initial qualms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The mouse is triggered sometimes whilst typing. This is configurable, and I have switched it to disable the mouse whilst typing, but to no avail.&lt;/li&gt;
&lt;li&gt;The password box looses focus more times than not, and you end up typing your password in unfavourable places. This could be related to the previous issue discussed.&lt;/li&gt;
&lt;li&gt;Keyboard is ever so slightly flimsy, because sometimes letters will double up. Perhaps this is just a keyboard I need to get used to. Besides, I&amp;rsquo;ve used the Mac chiclet-style keyboards exlusively since 2009.&lt;/li&gt;
&lt;li&gt;The palm rests &amp;mdash; even though they feel great to the touch &amp;mdash; seems to get a bit streaky after a while. My fingers are constantly greasy from chowing on ginger biscuits and stuff like that, and it doesn&amp;rsquo;t wipe down well.&lt;/li&gt;
&lt;li&gt;The backspace button does make a slight squeaky sound sometimes, but this could be because my pinky finger &amp;ldquo;pulls&amp;rdquo; on the button due to the angle I attack it with. Still &amp;mdash; I don&amp;rsquo;t think this should happen.&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;Outro&lt;/h1&gt;

&lt;p&gt;If anything else pops up, or if the XPS 13 makes my life significantly better in any other way, I&amp;rsquo;ll come back here to amend. (I won&amp;rsquo;t do those silly &lt;strong&gt;UPDATE&lt;/strong&gt; things at the bottom &amp;mdash; you can look at the &lt;a href=&quot;https://github.com/opyate/opyate.github.io/commits/master/_posts/2013-11-02-dell-xps-13-linux-edition-makes-me-happy.md&quot;&gt;Git history of this page&lt;/a&gt; for changes.)&lt;/p&gt;

&lt;p&gt;This is my first ever piece of Dell equipment, and it doesn&amp;rsquo;t look nor feel like a grey, impersonal piece of office equipment. Also, Mr. &lt;a href=&quot;http://en.wikipedia.org/wiki/Mark_Shuttleworth&quot;&gt;Mark Hails-From-The-Same-Home-Town-As-I Shuttleworth&lt;/a&gt; got things very right with Ubuntu. Linux has certainly come a long way since that day in 1995 when my mate dropped off 25-odd floppies of Slackware.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m more productive than ever and won&amp;rsquo;t be going back to Apple. I certainly don&amp;rsquo;t want to shoehorn OSX into a usable system with macports any time soon.&lt;/p&gt;
</content>
	<content type="image/jpeg" src="http://25.media.tumblr.com/ee240ba31d3f2f3d04985380a78a7cb3/tumblr_mvmkbyrTe01ri2z5io1_1280.jpg" />
    <author>
      <name>Juan Uys</name>
      <uri>http://opyate.com/about/</uri>
    </author>
  </entry>
  
  <entry>
    <title>AngularJS and Internet Explorer woes</title>
    <link href="http://opyate.com/2013/11/01/angularjs-and-internet-explorer-woes.html"/>
    <updated>2013-11-01T00:00:00-07:00</updated>
    <id>http://opyate.com/2013/11/01/angularjs-and-internet-explorer-woes</id>
    <content type="html">&lt;p&gt;&lt;em&gt;Aka endless clicking on crossbrowsertesting.com and why I love being a backend programmer.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://distilleryimage7.ak.instagram.com/3955ae5e433711e395a822000ae90d43_8.jpg&quot; width=&quot;50%&quot; align=&quot;right&quot; alt=&quot;AngularJS and Internet Exporer woes&quot;&gt; A few weeks ago, one of my clients tasked me with building a public-facing single page app for their credit monitoring business. They&amp;rsquo;ve heard good things about &lt;a href=&quot;http://angularjs.org/&quot;&gt;AngularJS&lt;/a&gt; and said they wouldn&amp;rsquo;t mind if I learned it on the job. (I love those kinds of clients!)&lt;/p&gt;

&lt;p&gt;At this point we&amp;rsquo;ve already solidified the backend API (&lt;a href=&quot;http://scala-lang.org/&quot;&gt;Scala&lt;/a&gt; + &lt;a href=&quot;http://www.playframework.com/documentation/2.1.x/ScalaHome&quot;&gt;Play! 2.1.3&lt;/a&gt;) and felt like getting my hands dirty with our good friend Javascript.&lt;/p&gt;

&lt;h1&gt;At first, it was easy&lt;/h1&gt;

&lt;p&gt;I knocked the first version out quickly and got it working on the latest Chrome and Firefox on a Macbook Air. As we all know, my setup represents a small slice of humanity, so onto cross-browser testing I went.&lt;/p&gt;

&lt;h1&gt;And then, it wasn&amp;rsquo;t&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;ve been solely a backend programmer for a good few years now, and I soon remembered why: building something for to work with every browser/platform combination in the world is a royal &lt;acronym title=&quot;Pain In The Bottom&quot;&gt;PITA&lt;/acronym&gt;. I wasn&amp;rsquo;t going to give up, though, and &lt;a href=&quot;http://crossbrowsertesting.com&quot;&gt;the tool I used to achieve this goal&lt;/a&gt; comes with an A+ thumb&amp;rsquo;s up 5 stars from me. I was saved the cost and effort of running every other major browser/platform combination.&lt;/p&gt;

&lt;p&gt;But, still &amp;mdash; this is how it all panned out: load the page, load dev tools, and then the clicking begins. The endless clicking through thousands of lines of AngularJS and jQuery code to find the point where things fall over, and then just before the Eureka moment, the connection would drop. Or IE devtools would throw a wobbly and loose its place in the source code. All of this via a Flash frame stuck with IE devtools. IE DEVTOOLS, people! Not fun.&lt;/p&gt;

&lt;p&gt;Which is why this isn&amp;rsquo;t a detailed bug report: I merely stumbled onto a solution after pulling all my hair out and trying something different.&lt;/p&gt;

&lt;h1&gt;The issue&lt;/h1&gt;

&lt;p&gt;Now, I&amp;rsquo;ve done exactly what the good AngularJS folks &lt;a href=&quot;http://docs.angularjs.org/guide/ie&quot;&gt;told me to do&lt;/a&gt;, but my scenario seemed unique. It turns out that if you use a custom directive from a partial in IE, it won&amp;rsquo;t be callable as an element (&amp;lsquo;E&amp;rsquo;), but only as an attribute (&amp;lsquo;A&amp;rsquo;), e.g. of a DIV.&lt;/p&gt;

&lt;p&gt;I explain via two examples &lt;a href=&quot;/projects/angularjs-internet-explorer&quot;&gt;over here&lt;/a&gt;. If you are the lucky owner of a Windows box loaded with IE8 or smaller, please go and try it out and then lodge a proper bug report with the jQuery folks. Yes, yes &amp;mdash; I know it sounds like this article is about AngularJS, but the real issue seemed to be with jQuery.&lt;/p&gt;

&lt;p&gt;Something to do with &lt;code&gt;target.appendChild(elem);&lt;/code&gt; on line 6,050 of the &lt;a href=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.js&quot;&gt;latest version of jQuery at the time of writing&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the mean time, I hanker after my beloved Scala backend servers, where I get to choose exactly which platform and which flavour of VM I run on.&lt;/p&gt;
</content>
	<content type="image/jpeg" src="http://distilleryimage7.ak.instagram.com/3955ae5e433711e395a822000ae90d43_8.jpg" />
    <author>
      <name>Juan Uys</name>
      <uri>http://opyate.com/about/</uri>
    </author>
  </entry>
  
  <entry>
    <title>Failed startup #2</title>
    <link href="http://opyate.com/2013/07/19/failed-startup-2.html"/>
    <updated>2013-07-19T00:00:00-07:00</updated>
    <id>http://opyate.com/2013/07/19/failed-startup-2</id>
    <content type="html">&lt;p&gt;&lt;em&gt;Pollarize&lt;/em&gt; is a decision-making platform that makes it quicker and easier for you to query your friends across multiple social networks and gather their responses into one concise answer. I co-founded &lt;em&gt;pollarize&lt;/em&gt; at Startup Weekend London, March 2012, which we won. Shortly after, we were accepted into Wayra UK, whom gave us enough money to work on releasing &lt;em&gt;pollarize&lt;/em&gt; on iOS and web in December 2012. Sadly, we have since run out of cash and have failed to secure more funding.&lt;/p&gt;

&lt;p&gt;This article is a retrospective.&lt;/p&gt;

&lt;h2&gt;Startup weekend&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.flickr.com/photos/didscatterbrain/sets/72157629680707765/with/7021256699/&quot;&gt;&lt;img src=&quot;http://farm8.staticflickr.com/7256/7021256699_cf4c66b390_b.jpg&quot; alt=&quot;Startup weekend final photo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;That&amp;rsquo;s me in front behind the HP bag.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I won&amp;rsquo;t re-tell the story of &lt;em&gt;pollarize&amp;rsquo;s&lt;/em&gt; beginnings, so I copy Mat&amp;rsquo;s post from the old &lt;em&gt;pollarize&lt;/em&gt; blog:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If superhero reboots have taught me anything over the past few years it’s that people love an origin story so I thought I’d share ours with you:&lt;/p&gt;

&lt;p&gt;At the most basic level &lt;em&gt;Pollarize&lt;/em&gt; was born out of my long term courtship of Juan Uys, our CTO, and an indecisive iPad purchase.&lt;/p&gt;

&lt;p&gt;Juan and I met for the first time at a Hacker News event in 2010 and I quickly identified him as the technical guru I needed to help me launch the startup I was working on. Unfortunately I discovered that Juan was working on his own project but the the two of us stayed in touch and ended up becoming friends instead.&lt;/p&gt;

&lt;p&gt;Fast forward a year and a half and both of our previous projects have gone the way of the dodo so we decided to team up and attend London Startup Weekend. We met up towards the end of March of this year, a week or so before the event, and threw a few ideas around, including an idea borne out of my experience trying to decide which iPad version (3G vs. Extra Memory) I should buy…&lt;/p&gt;

&lt;p&gt;Startup Weekend London was an awesome experience. I’d spoken to people that had attend similar events before so I knew that the key to doing well was forming a small, manageable, team and executing as quickly as possible. With Juan on board and taking care of the back end we set out to fill the gaps in our team as quickly as possible and recruited Michael Hobson to look after design and Sara Gozalo to focus on front end development.&lt;/p&gt;

&lt;p&gt;We learnt a lot over the course of that weekend - I got further with a startup in those 54 hours than I had in a year of trying - but most importantly we went on to win.  Winning that event had two major outcomes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It was a great validation of the project and encouraged us to continue with it after the event.&lt;/li&gt;
&lt;li&gt;It introduced us to the team behind Wayra UK - the weekend’s primary sponsors.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In light of this we decided to continue the project after we left Startup Weekend and also began the process of applying to accelerators.&lt;/p&gt;

&lt;p&gt;Unfortunately we had to part ways with Sara at this point due to her other commitments and Juan quickly brought Phil Cole on board to take over front end development work.&lt;/p&gt;

&lt;p&gt;A month or so later we made it through the final stage of selection at Wayra and became one of the first 16 teams to participate in Wayra UK.&lt;/p&gt;

&lt;p&gt;A month after that we moved into the Wayra Academy as one of, if not the, earliest stage teams in the program and set about starting again from scratch.&lt;/p&gt;

&lt;p&gt;It’s been 8 months since the Startup Weekend pitch that kicked all of this off and we’re still to break the ‘heads-down and execute like hell’ initiative that brought us that initial success. We have a wait list of 1,500 potential users signed up already, the second version of our iOS app in the app store and a brand new web app experience.  It’s very early days for us but you can be sure that we’re giving it our best shot.&lt;/p&gt;

&lt;p&gt;I’d like to take this quick opportunity to thank my team, our early adopters and all the people that have supported us behind the scenes - &lt;em&gt;Pollarize&lt;/em&gt; may have been born out of an iPad purchase but it’s growing into something bigger thanks to the awesome group of people involved in the project.&lt;/p&gt;

&lt;p&gt;Cheers,&lt;/p&gt;

&lt;p&gt;Mat&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;Wayra Academy&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.facebook.com/PollarizeMe&quot;&gt;&lt;img src=&quot;https://fbcdn-sphotos-b-a.akamaihd.net/hphotos-ak-prn1/543441_483970661623402_1985125126_n.jpg&quot; alt=&quot;W is for Wayra&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mat&amp;rsquo;s post above already aluded to Wayra Academy. I&amp;rsquo;ll fill in some more blanks.&lt;/p&gt;

&lt;p&gt;Wayra was the hardest I&amp;rsquo;ve ever worked in my life. Apart from having to keep my day job (the guys didn&amp;rsquo;t &amp;mdash; bless &amp;lsquo;em), I squeezed &lt;em&gt;pollarize&lt;/em&gt; deliverables into every spare minute I had. As can be read from my &lt;a href=&quot;http://funkshional.wordpress.com/category/pollarize/&quot;&gt;old &lt;em&gt;pollarize&lt;/em&gt; posts&lt;/a&gt;, I used a few technologies which enabled me to iterate very, very quickly. I worked 3 hours before work in the morning, one hour over lunch, then another few hours in the evening. Weekends were 2 ten hour days. Needless to say, I never burned out. I followed a healthy diet and went to the gym every morning to stay limber. I did regret not spending the week days in the shiny new office with the guys, but with the help of good old email, Pivotal Tracker and some Basecamp, I did a mighty good job of getting those tickets out and keeping the bugs at bay.&lt;/p&gt;

&lt;p&gt;I rushed through hours and hours of Scala, and used some Python for some add-on NLP and recommendation projects which we never launched. Mike designed everything we threw at him perfectly, whilst also juggling what was to become his &lt;a href=&quot;http://www.3-beards.com/&quot;&gt;tech events&lt;/a&gt; business. Phil became my personal hero when he learned, developed and launched a gorgeous iOS app in 3 months. And Mat kept hustling all the way through it all, meeting, greeting, wining, dining and basically trying to secure us some funding.&lt;/p&gt;

&lt;p&gt;We were going for the Big Bang, one-in-a-million, &amp;ldquo;get lucky&amp;rdquo; exit &amp;mdash; something one is especially hungry for when your app is social and free.&lt;/p&gt;

&lt;h2&gt;Dublin Web Summit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.facebook.com/PollarizeMe&quot;&gt;&lt;img src=&quot;https://fbcdn-sphotos-e-a.akamaihd.net/hphotos-ak-prn1/404671_481933535160448_515453169_n.jpg&quot; alt=&quot;&#39;Stout&#39; in Afrikaans means &#39;Naughty&#39;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mike won 2 Web Summit tickets, and Wayra sponsored another 2, so we were all able to attend. We implemented and refined about double the amount of features from the previous 6 months at the Web Summit weekend.&lt;/p&gt;

&lt;p&gt;We had a successful iPhone app launch, got some good PR going, and met with more angels and investors you can shake an executive summary at.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://itunes.apple.com/gb/app/pollarize/id564203002&quot;&gt;&lt;img src=&quot;https://fbcdn-sphotos-d-a.akamaihd.net/hphotos-ak-prn1/561795_479200655433736_1131174673_n.jpg&quot; alt=&quot;App Store, here we come!&quot; /&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We spoke, we demo&amp;rsquo;d, we networked with other startups and got the buzz going. This was the best times of our respective professional lives.&lt;/p&gt;

&lt;h2&gt;Big Bang&lt;/h2&gt;

&lt;p&gt;Big bang? No: crash and burn. We failed to secure funding. We pivoted, then re-pivoted in a panic to make ourselves matter. We desperately wanted to stick together as a team and make more stuff. We do sometimes wonder if we were in a different startup environment if things would have panned out differently. Besides, we weren&amp;rsquo;t the only ones making opinion apps: there are &lt;a href=&quot;https://getamen.com/classic&quot;&gt;Amen&lt;/a&gt;, &lt;a href=&quot;http://thumb.it/&quot;&gt;Thumb&lt;/a&gt;, &lt;a href=&quot;http://polarb.com/&quot;&gt;Polar&lt;/a&gt; and others.&lt;/p&gt;

&lt;p&gt;We started an agency called &lt;a href=&quot;http://meetstrange.com/&quot;&gt;Strange&lt;/a&gt;, heavily inspired by &lt;a href=&quot;http://berglondon.com/&quot;&gt;BERG&lt;/a&gt;. All of us, however, went on to separate things, because bills needed paying, and our respective better halves couldn&amp;rsquo;t sustain us too much longer. (My story is slightly different. Having kept my day job, the missus really just needed some help with the &lt;a href=&quot;http://pits-to-palace.tumblr.com&quot;&gt;renovations&lt;/a&gt; already!)&lt;/p&gt;

&lt;h2&gt;Exodus&lt;/h2&gt;

&lt;p&gt;A couple of days ago I put a stop to all our bills: Github, Pivotal, Heroku Postgres, SSL, Mongo, etc etc. The free instance on Heroku is in maintenance mode, and our splash page will remain until the domain expires, and we probably won&amp;rsquo;t renew it. The demise of pollarize is sad for the 4 of us considering the hours we put in.&lt;/p&gt;

&lt;p&gt;We are doing great, though. Phil went on to work (and take equity in) one of the Wayra shining stars: &lt;a href=&quot;http://www.nightzookeeper.com/&quot;&gt;Night Zookeeper&lt;/a&gt;. Mike, like I said, is crafting the best tech events, now worldwide. (Silicon Drinkabout Copenhagen, anyone?). Mat continues to conquer the world, &lt;a href=&quot;https://medium.com/@Wehtam&quot;&gt;one idea at a time&lt;/a&gt;. The missus and I just had a baby, and I&amp;rsquo;m planning my next move.&lt;/p&gt;

&lt;p&gt;Now, I just have to wait for the guys to become slightly more available again so we can hack up our Next Big Thing. We did everything perfectly before, but the world just wasn&amp;rsquo;t ready. Our next product will be perfect again, but it won&amp;rsquo;t be free ;-)&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;
</content>
	<content type="image/jpeg" src="http://i.imgur.com/ENlAiHy.jpg" />
    <author>
      <name>Juan Uys</name>
      <uri>http://opyate.com/about/</uri>
    </author>
  </entry>
  
</feed>
